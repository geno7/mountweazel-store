{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/LoadingComponent.js","components/ProductCardsComponent.js","redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreators.js","components/DisplayProductComponent.js","components/CartComponent.js","components/MainComponent.js","redux/cart.js","redux/products.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","this","setState","cartTotal","cart","length","Fragment","className","to","Navbar","dark","expand","NavbarToggler","onClick","class","Collapse","isOpen","navbar","Nav","NavItem","Component","connect","products","Footer","Home","Loading","console","log","RenderProductCard","product","Card","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","price","ProductCards","directory","map","isLoading","errMess","PRODUCTS_LOADING","PRODUCTS_FAILED","ADD_PRODUCTS","ADD_TO_CART","REMOVE_FROM_CART","baseUrl","fetchProducts","dispatch","productsLoading","fetch","then","response","ok","error","Error","status","statusText","message","json","addProducts","catch","productsFailed","type","ActionTypes","payload","postToCart","itemData","quantity","size","newItem","setTimeout","postRemoveFromCart","toRemove","mapStateToProps","mapDispatchToProps","resetApparelForm","actions","reset","quantitySelect","sizeSelect","PurchaseForm","handleBlur","field","touched","handleInputChange","handleSubmit","values","JSON","stringify","alert","event","target","value","checked","errors","validate","model","onSubmit","showSize","SizeSelect","onChange","Row","Label","htmlFor","Input","min","invalid","onBlur","FormFeedback","Button","onPress","addToCart","PurchaseFormConnected","RenderProduct","category","description","withRouter","Breadcrumb","BreadcrumbItem","charAt","toUpperCase","slice","active","RenderCartItem","height","toString","toFixed","Cart","cartData","item","find","totalPrice","reduce","a","i","current","totalItems","Table","Main","path","component","exact","render","filter","match","params","productId","sameSize","found","newQuantity","objIndex","action","findIndex","obj","concat","Products","InitApparel","store","createStore","combineReducers","createForms","apparelForm","applyMiddleware","thunk","logger","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c81da99a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavbarToggler, Collapse, NavItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        cart: state.cart,\r\n    };\r\n};\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let cartTotal = this.props.cart.length\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-center\">\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <h1>Storefront</h1>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavLink className=\"nav-link\" to=\"/cart\">\r\n                            <span class=\"text-white\">\r\n                                <i className=\"fa fa-shopping-cart fa-lg\" /> \r\n                                ({cartTotal})\r\n                            </span>\r\n                        </NavLink>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar className=\"center-navbar\">\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        Featured\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/category/apparel\">\r\n                                        Apparel\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/category/ducks\">\r\n                                        Ducks\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/category/music\">\r\n                                        Music\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return <div className=\"fixed-bottom site-footer text-white text-center\">\r\n        Made in 2021. This is not a real store, this website is a portfolio piece made by Jaden Eckel.\r\n        </div>;\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <>\r\n        This is where the Home component will go eventually\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col\">\r\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n            <p>Loading...</p>\r\n            {console.log(\"loading...\")}\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\nfunction RenderProductCard({ product }) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/products/${product.id}`}>\r\n        <CardImg width=\"100%\" src={product.image} alt={product.name} />\r\n        <CardImgOverlay>\r\n          <CardTitle>{product.name}</CardTitle>\r\n          <CardTitle>{product.price}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction ProductCards(props) {\r\n  console.log(\"ProductCards, \", props);\r\n  const directory = props.products.map((product) => {\r\n    return (\r\n      <div key={product.id} className=\"col-md-5 m-1\">\r\n        <RenderProductCard product={product} />\r\n      </div>\r\n    );\r\n  });\r\n  console.log(props.isLoading);\r\n  if (props.isLoading) {\r\n    return <Loading />;\r\n  }\r\n  if (props.errMess) {\r\n    return <h4>{props.errMess}</h4>;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {/* <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\"></Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Product</BreadcrumbItem>\r\n          </Breadcrumb> */}\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">{directory}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCards;\r\n","export const PRODUCTS_LOADING = 'PRODUCTS_LOADING';\r\nexport const PRODUCTS_FAILED = 'PRODUCTS_FAILED';\r\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';","export const baseUrl = \"http://192.168.1.72:3001/\";\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nconsole.log(baseUrl)\r\n\r\nexport const fetchProducts = () => (dispatch) => {\r\n    dispatch(productsLoading());\r\n    console.log(`the baseUrl variable is ${baseUrl}`)\r\n\r\n    return fetch('https://mountweazel-store-db.herokuapp.com/' + \"products\")\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    const error = new Error(\r\n                        `Error ${response.status}: ${response.statusText}`\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                const errMess = new Error(error.message);\r\n                throw errMess;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((products) => dispatch(addProducts(products)))\r\n        .catch((error) => dispatch(productsFailed(error.message)));\r\n};\r\n\r\nexport const productsLoading = () => ({\r\n    type: ActionTypes.PRODUCTS_LOADING,\r\n});\r\n\r\nexport const productsFailed = (errMess) => ({\r\n    type: ActionTypes.PRODUCTS_FAILED,\r\n    payload: errMess,\r\n});\r\n\r\nexport const addProducts = (products) => ({\r\n    type: ActionTypes.ADD_PRODUCTS,\r\n    payload: products,\r\n});\r\n\r\nexport const addToCart = product => ({\r\n    type: ActionTypes.ADD_TO_CART,\r\n    payload: product,\r\n});\r\n\r\nexport const postToCart = (itemData,quantity,size) => (dispatch) => {\r\n\r\n    const newItem = {\r\n        itemData,\r\n        quantity,\r\n        size\r\n    };\r\n    \r\n    setTimeout(() => {\r\n        dispatch(addToCart(newItem));\r\n    }, 1000);\r\n};\r\n\r\nexport const removeFromCart = (productId) => ({\r\n    type: ActionTypes.REMOVE_FROM_CART,\r\n    payload: productId,\r\n});\r\n\r\nexport const postRemoveFromCart = (itemData, quantity, size) => (dispatch) => {\r\n    const toRemove = {\r\n        itemData,\r\n        quantity,\r\n        size,\r\n    };\r\n\r\n    setTimeout(() => {\r\n        dispatch(removeFromCart(toRemove));\r\n    }, 1000);\r\n};","import React, { Component } from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    FormFeedback,\r\n    Button,\r\n    Input,\r\n    Label,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form } from \"react-redux-form\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { fetchProducts, postToCart } from \"../redux/ActionCreators\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        cart: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchProducts: () => fetchProducts(),\r\n    resetApparelForm: () => actions.reset(\"apparelForm\"),\r\n    postToCart: (itemData,quantitySelect,sizeSelect) => postToCart(itemData,quantitySelect,sizeSelect),\r\n};\r\n\r\n//specific parameter selectors for the product and \"ADD TO CART\" button\r\nclass PurchaseForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sizeSelect: \"Small\",\r\n            quantitySelect: 1,\r\n            touched: {\r\n                sizeSelect: false,\r\n                quantitySelect: false,\r\n            },\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this); //handles changing input values\r\n        this.handleSubmit = this.handleSubmit.bind(this); //handles submitting form\r\n    }\r\n\r\n    //handle adding the item to your cart\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n        console.log(\"Current values is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(this.state));\r\n        console.log(\"sizeSelect: \" + this.state.sizeSelect)\r\n        console.log(\"quantitySelect: \" + this.state.quantitySelect);\r\n        this.props.postToCart(\r\n            this.props.itemData,\r\n            this.state.quantitySelect,\r\n            this.state.sizeSelect);\r\n        this.props.resetApparelForm();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        //change the state when values in the form are changed\r\n        const target = event.target;\r\n        const value =\r\n            target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState(\r\n            {\r\n                [name]: value,\r\n            },\r\n            () => console.log(this.state)\r\n        );\r\n    }\r\n\r\n    //validate form submissions, handle error messages\r\n    validate(quantitySelect, sizeSelect) {\r\n        const errors = {\r\n            quantitySelect: \"\",\r\n            sizeSelect: \"\",\r\n        };\r\n\r\n        if (this.state.touched.quantitySelect) {\r\n            if (quantitySelect < 1) {\r\n                errors.quantitySelect =\r\n                    \"Quantity must be greater than or equal to 1.\";\r\n            }\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    //test whether a field is in focus or not\r\n    handleBlur = (field) => () => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const errors = this.validate(\r\n            this.state.quantitySelect,\r\n            this.state.sizeSelect\r\n        );\r\n\r\n        return (\r\n            <Form\r\n                model=\"apparelForm\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n                {/* only display size selector if product is apparel */}\r\n                {this.props.showSize && (\r\n                    <SizeSelect\r\n                        value={this.state.sizeSelect}\r\n                        onChange={this.handleInputChange}\r\n                        errors={errors.sizeSelect}\r\n                    />\r\n                )}\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"quantitySelect\">Quantity</Label>\r\n                    <Input\r\n                        name=\"quantitySelect\"\r\n                        id=\"quantitySelect\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        value={this.state.quantitySelect}\r\n                        invalid={errors.quantitySelect}\r\n                        onBlur={this.handleBlur(\"quantitySelect\")}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <FormFeedback>{errors.quantitySelect}</FormFeedback>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Button onPress={() => this.addToCart()}>\r\n                        ADD TO CART\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nfunction SizeSelect({ value, onChange, errors }) {\r\n    return (\r\n        <Row className=\"form-group\">\r\n            <Label htmlFor=\"sizeSelect\">Size</Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"sizeSelect\"\r\n                id=\"sizeSelect\"\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                <option>Small</option>\r\n                <option>Medium</option>\r\n                <option>Large</option>\r\n                <option>XL</option>\r\n                <option>XXL</option>\r\n            </Input>\r\n            <FormFeedback>{errors}</FormFeedback>\r\n        </Row>\r\n    );\r\n}\r\n\r\n//connect purchase form\r\nconst PurchaseFormConnected = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PurchaseForm);\r\n\r\nfunction RenderProduct({ product }) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div class=\"row\">\r\n                <div className=\"col-md-12 col-lg-6\">\r\n                    <img src={product.image} alt={product.name} />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-6\">\r\n                    <h2>{product.name}</h2>\r\n                    <h3>${product.price}</h3>\r\n                    <PurchaseFormConnected\r\n                        showSize={product.category === \"apparel\"}\r\n                        itemData={product}\r\n                    />\r\n                    <div>{product.description}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DisplayProduct(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.product) {\r\n        return (\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link\r\n                                    to={\"/category/\" + props.product.category}\r\n                                >\r\n                                    {props.product.category\r\n                                        .charAt(0)\r\n                                        .toUpperCase() +\r\n                                        props.product.category.slice(1)}\r\n                                </Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                {props.product.name}\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderProduct product={props.product} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DisplayProduct)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { postRemoveFromCart, postToCart } from \"../redux/ActionCreators\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        cart: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    postRemoveFromCart: (itemData, quantitySelect, sizeSelect) => postRemoveFromCart(itemData, quantitySelect, sizeSelect),\r\n    postToCart: (itemData, quantitySelect, sizeSelect) => postToCart(itemData, quantitySelect, sizeSelect),\r\n};\r\n\r\n//render individual cart items\r\nfunction RenderCartItem({ product, cart, postRemoveFromCart, postToCart }) {\r\n    //const cartProduct = cart.find(({ id }) => id === product.id); //get id of object in cart array that represents current object\r\n    return (\r\n        <tr>\r\n            <th>\r\n                <img src={product.itemData.image} alt={product.itemData.name} height=\"100\" />\r\n            </th>\r\n            <th>\r\n                {product.itemData.name} ({product.size})\r\n            </th>\r\n            <th>x{product.quantity.toString()}</th>\r\n            <th>\r\n                <Button onClick={() => postRemoveFromCart(product.itemData, 1, product.size)}>-</Button>\r\n            </th>\r\n            <th>\r\n                <Button onClick={() => postToCart(product.itemData, 1, product.size)}>+</Button>\r\n            </th>\r\n            <th>{(product.itemData.price * product.quantity).toFixed(2)}</th>\r\n        </tr>\r\n    );\r\n}\r\n\r\n//render cart items as list\r\nclass Cart extends Component {\r\n\r\n    render() {\r\n        //take products array and make a new array from it with only the products that match the cart array \r\n        //const cartData = this.props.products.products.filter((product) => this.props.cart.find( ({id}) => id === product.id))\r\n        const cartData = this.props.cart.map((item) => {\r\n            item.product = this.props.products.products.find(({id}) => id === item.id)\r\n            console.log(\"current item \", item)\r\n            return item\r\n        })\r\n\r\n        //display the cartData as individual items\r\n        const directory = this.props.cart.map((item) => {\r\n            return (\r\n                <div key={item.itemData.id} className=\"col-md-5 m-1\">\r\n                    <RenderCartItem product={item} postRemoveFromCart={this.props.postRemoveFromCart} postToCart={this.props.postToCart} cart={this.props.cart} />\r\n                </div>\r\n            );\r\n        });\r\n        \r\n        let totalPrice = this.props.cart.reduce(function (a, i) {\r\n            let current = a + (i.itemData.price*i.quantity);\r\n            console.log(\"current \", current, a, cartData, i.itemData.price);\r\n            return a + (i.itemData.price * i.quantity);\r\n        }, 0);\r\n\r\n        let totalItems = this.props.cart.reduce(function (a, i) {\r\n            let current = a + i.quantity;\r\n            console.log(\"current \", current, a, cartData, i.itemData.price);\r\n            return a + i.quantity;\r\n        }, 0);\r\n\r\n        console.log(\"total \", totalPrice)\r\n\r\n        console.log(\"total \", totalItems);\r\n\r\n        console.log(\"cartData \", cartData)\r\n        console.log(\"cart \", this.props.cart);\r\n\r\n        //console.log(this.props.isLoading);\r\n        if (this.props.isLoading) {\r\n            return <Loading />;\r\n        }\r\n        if (this.props.errMess) {\r\n            return <h4>{this.props.errMess}</h4>;\r\n        }\r\n        if (!this.props.cart.length) {\r\n            return (\r\n                <div>\r\n                    <h1>Cart</h1>\r\n                    <h3>Your cart is currently empty.</h3>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6 col-sm-12\">\r\n                        <h1>Cart</h1>\r\n                        <Table>\r\n                            <tbody>{directory}</tbody>\r\n                        </Table>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 col-sm-12\">\r\n                        <h2>\r\n                            Subtotal: {totalPrice.toFixed(2)} ({totalItems} items)\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <Button>Proceed to Checkout</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React, { Component } from \"react\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport ProductCards from \"./ProductCardsComponent\";\r\nimport DisplayProduct from \"./DisplayProductComponent\";\r\nimport Cart from \"./CartComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { fetchProducts } from \"../redux/ActionCreators\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products,\r\n        cart: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchProducts: () => fetchProducts(),\r\n    resetApparelForm: () => actions.reset(\"apparelForm\"),\r\n};\r\n\r\n// class component extending from parent \"Component\" class\r\nclass Main extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchProducts();\r\n    }\r\n\r\n    render() {\r\n        const ProductWithId = ({ match }) => {\r\n            return (\r\n                <DisplayProduct\r\n                    product={\r\n                        this.props.products.products.filter(\r\n                            (product) => product.id === +match.params.productId\r\n                        )[0]\r\n                    }\r\n                    resetApparelForm={this.props.resetApparelForm}\r\n                    // server stuff\r\n                    isLoading={this.props.products.isLoading}\r\n                    errMess={this.props.products.errMess}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Header />\r\n\r\n                <div class=\"accomodate-footer\">\r\n                    <Switch>\r\n                        {/* route nav paths */}\r\n                        <Route path=\"/home\" component={Home} />\r\n                        <Route\r\n                            exact\r\n                            path=\"/category/:category\"\r\n                            render={(props) => (\r\n                                <ProductCards\r\n                                    products={this.props.products.products.filter(\r\n                                        (product) =>\r\n                                            product.category ===\r\n                                            props.match.params.category\r\n                                    )}\r\n                                    {...props}\r\n                                    isLoading={this.props.products.isLoading}\r\n                                    errMess={this.props.products.errMess}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {/* route path for individual product pages */}\r\n                        <Route\r\n                            path=\"/products/:productId\"\r\n                            component={ProductWithId}\r\n                        />\r\n                        <Route\r\n                            path=\"/cart\"\r\n                            render={(props) => (\r\n                                <Cart products={this.props.products.products} />\r\n                            )}\r\n                        />\r\n                        {/* else redirect to home page */}\r\n                        <Redirect to=\"/home\"></Redirect>\r\n                    </Switch>\r\n                </div>\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\n//cart reducer\r\n\r\nexport const Cart = (state = [], action) => {\r\n\r\n    let sameSize, found, newQuantity, objIndex\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_TO_CART:\r\n            //var for a product thats already in the cart that matches the one you want to add\r\n            found = state.filter(({ itemData }) => itemData === action.payload.itemData);\r\n\r\n            if (found) { //if the product already exists in the cart\r\n                console.log(\"found \", found) //debug\r\n\r\n                //list product as a separate item if it's a different size\r\n                sameSize = found.find(({size}) => size === action.payload.size)\r\n\r\n                console.log(\"sameSize \", sameSize)\r\n\r\n                if (sameSize) {\r\n                //add the existing quantity to the quantity you want to add\r\n                newQuantity = (+sameSize.quantity + +action.payload.quantity);\r\n                console.log(\"newQuantity \", newQuantity)\r\n\r\n                //set existing object to new quantity value\r\n                objIndex = state.findIndex((obj) => obj === sameSize);\r\n                console.log(\"objIndex \",objIndex)\r\n                state[objIndex].quantity = +newQuantity\r\n\r\n                console.log(\"state[objIndex] \", state[objIndex])\r\n\r\n                return [...state]; //stick product back into cart with new quantity\r\n                }\r\n            }\r\n            return state.concat(action.payload); //if the object isnt already in the cart, return a new state with the added cart item on the end of it\r\n\r\n        case ActionTypes.REMOVE_FROM_CART:\r\n            //check if object is in cart\r\n            found = state.filter(({ itemData }) => itemData === action.payload.itemData);\r\n\r\n            if (found) {\r\n                \r\n                console.log(\"found \", found) //debug\r\n\r\n                sameSize = found.find(({ size }) => size === action.payload.size);\r\n\r\n                newQuantity = (+sameSize.quantity - +action.payload.quantity); //subtract 1 from quantity of found obj\r\n                console.log(\"newQuantity \", newQuantity)\r\n\r\n                //change quantity of found obj\r\n                objIndex = state.findIndex((obj) => obj === sameSize);\r\n                state[objIndex].quantity = +newQuantity\r\n\r\n                if (state[objIndex].quantity === 0) {\r\n                    //if there isnt any more of an object, filter it out of the cart\r\n                    console.log(\"no more of this list item \", state[objIndex]); //debug\r\n                    console.log(\"itemdata \", found.itemData); //debug\r\n                    console.log(\"action payload \", action.payload); //debug\r\n                    return state.filter((cart) => cart.itemData !== action.payload.itemData);\r\n                }\r\n                \r\n                return [...state];\r\n            }\r\n        break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//current questions - should i make quantity part of the array of products? or should array be strictly a cart thing? what would be easier?\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Products = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    products: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PRODUCTS:\r\n            return {...state, isLoading: false, errMess: null, products: action.payload};\r\n        case ActionTypes.PRODUCTS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, products: []};\r\n        case ActionTypes.PRODUCTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};   \r\n        default: \r\n            return state;\r\n    }\r\n};","export const InitApparel = {\r\n    sizeSelect: 'Small',\r\n    quantitySelect: '1',\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter} from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport \"./css/style.scss\";\n\nconst store = ConfigureStore()\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter basename=\"mountweazel-store\">\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport logger from 'redux-logger';\r\nimport { Cart } from './cart'\r\nimport { Products } from './products'\r\nimport { InitApparel } from './forms'\r\nimport { createForms } from 'react-redux-form';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            cart: Cart,\r\n            products: Products,\r\n            ...createForms({\r\n                apparelForm: InitApparel\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}